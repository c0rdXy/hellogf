// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package hello

import (
	"context"
	"github.com/gogf/gf/v2/errors/gerror"
	"github.com/gogf/gf/v2/frame/g"
	"github.com/gogf/gf/v2/net/ghttp"
	hello2 "hellogf/api/hello"
	"hellogf/internal/service"
)

type hello struct{}

func NewHello() *hello {
	return &hello{}
}

func (c *hello) SayHello(req *ghttp.Request) {
	req.Response.Writefln("你好GoFrame!")
}

func (c *hello) Params(ctx context.Context, req *hello2.ParamsReq) (res *hello2.ParamsRes, err error) {
	r := g.RequestFromCtx(ctx)
	/*	name := r.GetQuery("name", "李四")
		r.Response.Writeln(name.String() + "你好!")
		data := r.GetQueryMap()
		r.Response.Writeln(data)
		data := r.GetQueryMap(g.Map{"name": "李四", "age": 20})
		r.Response.Writeln(data)

		data := r.GetForm("username")

		data := r.GetFormMap()
		r.Response.Writeln(data)

		type user struct {
			UserName string
			Age      int
			Password string
		}

		var u user
		err = r.ParseForm(&u)

		name := r.GetRouter("name")

		name := r.GetRouterMap()

		data := r.Parse(&u)
		if err == nil {
			r.Response.Writeln(data)
		}*/

	r.Response.Writeln(req)

	return
}

func (c *hello) Response(ctx context.Context, req *hello2.ParamsReq) (res *hello2.ParamsRes, err error) {
	//r := g.RequestFromCtx(ctx)

	//r.Response.Writef("<h1>hello %s, age %d</h1>", req.UserName, req.Age)
	//r.Response.WriteExit("<h2 style='color: red'>hello</h2>")
	//r.Response.Writeln("<h2 style='color: red'>hello</h2>")
	//r.Response.Writeln("<h2 style='color: red'>hello</h2>")

	//r.Response.WriteJson(req)

	res = &hello2.ParamsRes{
		UserName: "www",
		Password: "123456",
		Age:      18,
	}

	err = gerror.New("服务器开小差了")

	return
}

func (c *hello) Db(req *ghttp.Request) {

	books, err := service.Book().GetList(req.Context())

	if err == nil {
		req.Response.WriteJson(books)
	} else {
		req.Response.WriteJson(err.Error())
	}
}
